name: Build and Package PDFManager

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            - ${{ runner.os }}-pip-

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Download and extract ImageMagick Portable
        shell: pwsh
        run: |
          curl -sL "https://imagemagick.org/archive/binaries/ImageMagick-7.1.1-47-portable-Q16-x64.zip" -o imagick.zip
          Expand-Archive -Path imagick.zip -DestinationPath imagick_portable_64 -Force

      - name: Flatten ImageMagick directory
        shell: pwsh
        run: |
          $sub = Get-ChildItem imagick_portable_64 -Directory | Select-Object -First 1
          Move-Item -Path "$($sub.FullName)\*" -Destination imagick_portable_64 -Force
          Remove-Item -Path $sub.FullName -Recurse -Force

      - name: Download and extract Poppler Portable
        shell: pwsh
        run: |
          curl -sL "https://github.com/oschwartz10612/poppler-windows/releases/download/v24.02.0-0/Release-24.02.0-0.zip" -o poppler.zip
          Expand-Archive -Path poppler.zip -DestinationPath poppler_portable_64 -Force
      - name: Flatten Poppler directory
        shell: pwsh
        run: |
          # If library\bin is already at root, no flatten needed
          if (-Not (Test-Path poppler_portable_64\library\bin)) {
              # Nested extraction detected; flatten contents
              $sub = Get-ChildItem poppler_portable_64 -Directory | Select-Object -First 1
              # Ensure the target library\bin folder exists
              New-Item -ItemType Directory -Path poppler_portable_64\library\bin -Force | Out-Null
              # Move executables and DLLs from nested library\bin
              Move-Item -Path "$($sub.FullName)\library\bin\*" -Destination poppler_portable_64\library\bin -Force
              # Move top-level files and folders up
              Move-Item -Path "$($sub.FullName)\*" -Destination poppler_portable_64 -Force
              # Remove the now-empty nested root
              Remove-Item -Path $sub.FullName -Recurse -Force
          } else {
              Write-Host "Poppler directory already flattened."
          }
      - name: Build executable (windowed)
        run: |
          python build_tools/build_with_pyinstaller.py --windowed

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: PDFManager-artifacts
          path: |
            build/
            dist/
            imagick_portable_64/
            poppler_portable_64/

  installer:
    runs-on: windows-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: PDFManager-artifacts
          path: .

      - name: Install Inno Setup
        run: choco install innosetup -y --no-progress

      - name: Build installer
        working-directory: build_tools
        run: iscc PDFManager_PyInstaller_Setup.iss

      - name: Upload installer
        uses: actions/upload-artifact@v4
        with:
          name: PDFManager-installer
          path: installer_64/**/*.exe

